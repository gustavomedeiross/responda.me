--- Tabelas e Registros

-- Conta de Usuário

create table account
(
    id       numeric(7) generated by default as identity primary key,
    username varchar2(100) unique not null,
    email    varchar2(100) unique not null,
    password varchar2(100)
);

insert into account (username, email, password)
VALUES ('roberto', 'roberto@teste.com', 'senha123');
insert into account (username, email, password)
VALUES ('maria', 'maria@teste.com', 'senha123');
insert into account (username, email, password)
VALUES ('joao', 'joao@teste.com', 'senha123');
insert into account (username, email, password)
VALUES ('ricardo', 'ricardo@teste.com', 'senha123');
insert into account (username, email, password)
VALUES ('ana', 'ana@teste.com', 'senha123');
insert into account (username, email, password)
VALUES ('jose', 'jose@teste.com', 'senha123');
insert into account (username, email, password)
VALUES ('fernanda', 'fernanda@teste.com', 'senha123');

-- Quiz

create table quiz
(
    id               numeric(7) generated by default as identity primary key,
    id_account       numeric(7),
    title            varchar2(100),
    description      varchar2(1000),
    update_date_time timestamp,
    constraint fk_quiz_account foreign key (id_account) references account (id)
);

insert into quiz (id_account, title, description, update_date_time)
VALUES (1, 'Quiz de Geografia', 'Quiz que contempla questões relacionadas a geografia brasileira', sysdate);
insert into quiz (id_account, title, description, update_date_time)
VALUES (1, 'Quiz de Matemática', 'Quiz que contempla questões relacionadas a trigonometria', sysdate);
insert into quiz (id_account, title, description, update_date_time)
VALUES (2, 'Quiz de Química', 'Quiz que contempla questões relacionadas a tabela de elementos', sysdate);
insert into quiz (id_account, title, description, update_date_time)
VALUES (2, 'Quiz de Português', 'Quiz que contempla questões relacionadas a concordância verbal', sysdate);
insert into quiz (id_account, title, description, update_date_time)
VALUES (2, 'Quiz de Biologia', 'Quiz que contempla questões relacionadas ao sistema nervoso', sysdate);
insert into quiz (id_account, title, description, update_date_time)
VALUES (3, 'Quiz de Inglês', 'Quiz que contempla questões relacionadas a verbo to be', sysdate);
insert into quiz (id_account, title, description, update_date_time)
VALUES (3, 'Quiz de Educação Física', 'Quiz que contempla questões relacionadas saúde física', sysdate);

-- Questões do Quiz

create table question
(
    id               numeric(7) generated by default as identity primary key,
    id_quiz          numeric(7),
    description      varchar2(1000),
    difficulty       varchar(20) check (difficulty in ('hard', 'medium', 'easy')),
    update_date_time timestamp,
    constraint fk_question_quiz foreign key (id_quiz) references quiz (id)
);

insert into question (id_quiz, description, difficulty, update_date_time)
VALUES (1, 'Qual é o estado mais ao sul do país?', 'easy', SYSDATE);
insert into question (id_quiz, description, difficulty, update_date_time)
VALUES (1, 'O pais está divido em quais regiões?', 'medium', SYSDATE);
insert into question (id_quiz, description, difficulty, update_date_time)
VALUES (1, 'Qual o foi a primeira cidade do Brasil?', 'hard', SYSDATE);
insert into question (id_quiz, description, difficulty, update_date_time)
VALUES (1, 'Qual é a cidade com o melhor IDH do Brasil?', 'hard', SYSDATE);
insert into question (id_quiz, description, difficulty, update_date_time)
VALUES (1, 'Qual é a cidade com o pior IDH do Brasil?', 'hard', SYSDATE);
insert into question (id_quiz, description, difficulty, update_date_time)
VALUES (1, 'Qual é o menor estado do Brasil?', 'medium', SYSDATE);
insert into question (id_quiz, description, difficulty, update_date_time)
VALUES (1, 'Qual é o estado que tem mais municípios?', 'medium', SYSDATE);

-- Alternativas do Quiz

create table alternative
(
    id                  numeric(7) generated by default as identity primary key,
    id_question         numeric(7),
    description         varchar2(1000),
    correct_alternative varchar2(5) check ( correct_alternative in ('true', 'false')),
    update_date_time    timestamp,
    constraint fk_alternative_question foreign key (id_question) references question (id)
);

insert into alternative (id_question, description, correct_alternative, update_date_time)
VALUES (5, 'Jaguarari', 'false', SYSDATE);
insert into alternative (id_question, description, correct_alternative, update_date_time)
VALUES (5, 'Melgaço', 'true', SYSDATE);
insert into alternative (id_question, description, correct_alternative, update_date_time)
VALUES (5, 'Acrelândia', 'false', SYSDATE);
insert into alternative (id_question, description, correct_alternative, update_date_time)
VALUES (5, 'Oiapoque', 'false', SYSDATE);
insert into alternative (id_question, description, correct_alternative, update_date_time)
VALUES (4, 'Aracaju', 'false', SYSDATE);
insert into alternative (id_question, description, correct_alternative, update_date_time)
VALUES (4, 'Salvador', 'false', SYSDATE);
insert into alternative (id_question, description, correct_alternative, update_date_time)
VALUES (4, 'Rio de Janeiro', 'false', SYSDATE);
insert into alternative (id_question, description, correct_alternative, update_date_time)
VALUES (4, 'São Caetano do Sul', 'true', SYSDATE);

-- Partida

create table match
(
    id               numeric(7) generated by default as identity primary key,
    id_quiz          numeric(7),
    id_account       numeric(7),
    url              varchar2(200),
    update_date_time timestamp,
    constraint fk_match_quiz foreign key (id_quiz) references quiz (id),
    constraint fk_match_account foreign key (id_account) references account (id)
);

insert into match (id_quiz, id_account, url, update_date_time)
VALUES (1, 1, 'https://www.responda.me/wjci03j', sysdate);
insert into match (id_quiz, id_account, url, update_date_time)
VALUES (2, 1, 'https://www.responda.me/sg23a24', sysdate);
insert into match (id_quiz, id_account, url, update_date_time)
VALUES (1, 2, 'https://www.responda.me/g2pmc87', sysdate);
insert into match (id_quiz, id_account, url, update_date_time)
VALUES (4, 2, 'https://www.responda.me/2n3iahe', sysdate);
insert into match (id_quiz, id_account, url, update_date_time)
VALUES (3, 3, 'https://www.responda.me/ddf3ca2', sysdate);
insert into match (id_quiz, id_account, url, update_date_time)
VALUES (2, 3, 'https://www.responda.me/g3ad2ea', sysdate);
insert into match (id_quiz, id_account, url, update_date_time)
VALUES (4, 4, 'https://www.responda.me/h4a2d33', sysdate);

-- Resposta de pergunta em partida

create table answer
(
    id_match           numeric(7),
    id_question        numeric(7),
    id_alternative     numeric(7),
    id_account         numeric(7),
    creation_date_time timestamp,
    constraint fk_answer_match foreign key (id_match) references match (id),
    constraint fk_answer_question foreign key (id_question) references question (id),
    constraint fk_answer_alternative foreign key (id_alternative) references alternative (id),
    constraint fk_answer_account foreign key (id_account) references account (id)
);

insert into answer (id_match, id_question, id_alternative, id_account, creation_date_time)
VALUES (1, 5, 1, 1, sysdate);
insert into answer (id_match, id_question, id_alternative, id_account, creation_date_time)
VALUES (1, 5, 2, 2, sysdate);
insert into answer (id_match, id_question, id_alternative, id_account, creation_date_time)
VALUES (1, 5, 3, 3, sysdate);
insert into answer (id_match, id_question, id_alternative, id_account, creation_date_time)
VALUES (1, 5, 4, 4, sysdate);
insert into answer (id_match, id_question, id_alternative, id_account, creation_date_time)
VALUES (1, 4, 1, 1, sysdate);
insert into answer (id_match, id_question, id_alternative, id_account, creation_date_time)
VALUES (1, 4, 2, 2, sysdate);
insert into answer (id_match, id_question, id_alternative, id_account, creation_date_time)
VALUES (1, 4, 3, 3, sysdate);
insert into answer (id_match, id_question, id_alternative, id_account, creation_date_time)
VALUES (1, 4, 4, 4, sysdate);

-- Leaderboard de usuários (pontuação)

create table leaderboard
(
    id               numeric(7) generated by default as identity primary key,
    id_account       numeric(7),
    points           numeric(15),
    update_date_time timestamp,
    constraint fk_leaderboard_account foreign key (id_account) references account (id)
);

insert into leaderboard (id_account, points, update_date_time)
VALUES (1, 50, sysdate);
insert into leaderboard (id_account, points, update_date_time)
VALUES (2, 120, sysdate);
insert into leaderboard (id_account, points, update_date_time)
VALUES (3, 670, sysdate);
insert into leaderboard (id_account, points, update_date_time)
VALUES (4, 90, sysdate);
insert into leaderboard (id_account, points, update_date_time)
VALUES (5, 0, sysdate);
insert into leaderboard (id_account, points, update_date_time)
VALUES (6, 320, sysdate);
insert into leaderboard (id_account, points, update_date_time)
VALUES (7, 470, sysdate);

--- Views

-- Quantidade de quizzes criados por conta

create or replace view vw_count_quiz_by_account as
select a.id,
       a.username,
       count(q.id) as qt_quizzes
from account a
         join quiz q on a.id = q.id_account
group by a.id, a.username;

-- Quantidade de questões em cada quiz

create or replace view vw_count_questions_by_quiz as
select q.id,
       q.title,
       count(qu.id) as qt_questions
from quiz q
         join question qu on q.id = qu.id_quiz
group by q.title, q.id;

-- Quantidade de partidas jogadas por cada conta

create or replace view vw_matches_played_by_account as
select a.id,
       a.username,
       (select count(m.id)
        from match m
        where m.id_account = a.id) as matches_played
from account a;

-- Questões com sua resposta correta

create or replace view vw_question_with_correct_alternative as
select q.id,
       q.description,
       q.difficulty,
       (select a.description
        from alternative a
        where a.id_question = q.id
          and a.correct_alternative = 'true') as correct_alternative
from question q;

-- Usuários no leaderboard comparado a média

create or replace view vw_account_leaderboard_average as
select a.id,
       a.username,
       l.points,
       (select avg(ll.points) from leaderboard ll) as average
from account a
         join leaderboard l on a.id = l.id_account;

--- Procedures

-- Atualiza o leaderboard

CREATE OR REPLACE PROCEDURE sp_update_leaderboard IS
    v_points_easy   numeric(15);
    v_points_medium numeric(15);
    v_points_hard   numeric(15);
BEGIN

    delete from leaderboard;

    for c_accounts in (select * from account)
        loop

            SELECT coalesce(sum(count(a.id_alternative) * 2), 0)
            into v_points_easy
            FROM answer a
                     join question q on a.id_question = q.id
                     join alternative al on a.id_alternative = al.id
            WHERE a.id_account = c_accounts.id
              and q.difficulty = 'easy'
              and al.correct_alternative = 'true'
            group by a.id_alternative;

            SELECT coalesce(sum(count(a.id_alternative) * 3), 0)
            into v_points_medium
            FROM answer a
                     join question q on a.id_question = q.id
                     join alternative al on a.id_alternative = al.id
            WHERE a.id_account = c_accounts.id
              and q.difficulty = 'medium'
              and al.correct_alternative = 'true'
            group by a.id_alternative;

            SELECT coalesce(sum(count(a.id_alternative) * 4), 0)
            into v_points_hard
            FROM answer a
                     join question q on a.id_question = q.id
                     join alternative al on a.id_alternative = al.id
            WHERE a.id_account = c_accounts.id
              and q.difficulty = 'hard'
              and al.correct_alternative = 'true'
            group by a.id_alternative;

            insert into leaderboard (id_account, points, update_date_time)
            VALUES (c_accounts.id, v_points_easy + v_points_hard + v_points_medium, sysdate);

        end loop;
END sp_update_leaderboard;
/

-- Reset da senha por email

CREATE OR REPLACE PROCEDURE sp_reset_password(p_email varchar2) IS
BEGIN

    update account set password = null where email = p_email;

END sp_reset_password;
/